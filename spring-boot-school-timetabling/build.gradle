/*
 * Copyright 2020 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "org.springframework.boot" version "2.2.6.RELEASE"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id "java"
}

def optaplannerVersion = "8.0.0-SNAPSHOT"

group = "com.example"
version = "0.1.0-SNAPSHOT"
sourceCompatibility = "1.8"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-rest"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    runtimeOnly "com.h2database:h2"
    implementation "org.optaplanner:optaplanner-spring-boot-starter:${optaplannerVersion}"
    runtimeOnly "org.webjars:webjars-locator:0.37"
    runtimeOnly "org.webjars:bootstrap:4.3.1"
    runtimeOnly "org.webjars:font-awesome:5.11.2"
    runtimeOnly "org.webjars:momentjs:2.24.0"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
}

test {
    useJUnitPlatform()
}
